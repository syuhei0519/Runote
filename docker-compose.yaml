services:
  auth-service:
    build: 
      context: ./apps/auth_service
      dockerfile: local.Dockerfile
    volumes:
      - ./apps/auth_service:/app  
    ports:
      - 8000:8000
    env_file:
      - .env.dev
    depends_on:
      - mysql
    environment:
      - PYTHONDONTWRITEBYTECODE=1
    networks:
      - runote-net

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports: 
     - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - runote-net

  post-service:
    build:
      context: ./apps/post-service
      dockerfile: local.Dockerfile
    container_name: post-service
    volumes:
      - ./apps/post-service:/app
      - /app/node_modules  # node_modulesのキャッシュを防ぐ
    ports:
      - "4000:3000"
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/post
    depends_on:
      - postgres
    command: npm run dev
    networks:
      - runote-net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: post
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - runote-net
  
  emotion-service:
    build:
      context: ./apps/emotion-service
      dockerfile: local.Dockerfile
    container_name: emotion-service
    ports:
      - "8080:8080"
    volumes:
      - ./apps/emotion-service:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DATABASE_URL=emotion:emotionpass@tcp(emotion-db:3306)/emotiondb?charset=utf8mb4&parseTime=True&loc=Local
    depends_on:
      - redis
    networks:
      - runote-net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - runote-net

  emotion-db:
    image: mysql:8.0
    container_name: emotion-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: emotiondb
      MYSQL_USER: emotion
      MYSQL_PASSWORD: emotionpass
    ports:
      - "3310:3306"
    volumes:
      - emotion-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uemotion", "-pemotionpass"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - runote-net
  

  tag-service:
    build:
      context: ./apps/tag-service
      dockerfile: local.Dockerfile
    env_file:
      - ./apps/tag-service/.env  
    ports:
      - "4003:4000"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tag
    depends_on:
      - tag-db
    volumes:
      - ./apps/tag-service:/app
      - /app/node_modules
    networks:
      - runote-net

  tag-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: taguser
      POSTGRES_PASSWORD: tagpass
      POSTGRES_DB: tagdb
    ports:
      - "5435:5432"
    volumes:
      - postgres_data_tag:/var/lib/postgresql/data
    networks:
      - runote-net

volumes:
  mysql_data:
  postgres_data:
  postgres_data_tag:
  emotion-mysql-data:

networks:
  runote-net:
    driver: bridge